
local monarch = require 'monarch.monarch'
local button = require 'common.button'

function init(self)
	gui.set_render_order(3)
	msg.post('.', 'acquire_input_focus')

	local data = monarch.data(monarch.scr.final)

	local total_anim_time = 1
	local step_1 = total_anim_time/data.score[1]
	local step_2 = total_anim_time/data.score[2]

	self.score_1 = 0
	self.score_2 = 0
	self.node_1 = gui.get_node('score_f')
	self.node_2 = gui.get_node('score_m')
	
	self.timer_1 = timer.delay(step_1, true, function ()
		self.score_1 = self.score_1 + 1
		gui.set_text(self.node_1, self.score_1)
		if self.score_1 >= data.score[1] then
			timer.cancel(self.timer_1)
		end
	end)

	self.timer_2 = timer.delay(step_2, true, function ()
		self.score_2 = self.score_2 + 1
		gui.set_text(self.node_2, self.score_2)
		if self.score_2 >= data.score[2] then
			timer.cancel(self.timer_2)
		end
	end)

	if data.score[1] ~= data.score[2] then
		timer.delay(4, false, function ()
			local side = data.score[1] > data.score[2] and 2 or 1

			self.timer_3 = timer.delay(0.2, true, function ()
				self['score_' .. side] = self['score_' .. side] + 1
				gui.set_text(self['node_' .. side], self['score_' .. side])
				if self['score_' .. side] >= data.score[side == 1 and 2 or 1] then
					timer.cancel(self.timer_3)
					gui.set_enabled(gui.get_node('aaaa'), true)
				end
			end)
		end)
	end

	timer.delay(15, false, function ()
		monarch.show(monarch.scr.bonus_game)
	end)
end

function on_input(self, action_id, action)
end

