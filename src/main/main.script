local screens = require 'screens.screens'
local monarch = require 'monarch.monarch'
local camera = require 'orthographic.camera'
local save_data = require 'common.save_data'
local texts = require 'common.texts'
require 'common.utils'

local function resize_bg()
	local b = camera.screen_to_world_bounds()
	local w = b.z - b.x
	local h = b.y - b.w
	go.set('main:/go#background', 'size', vmath.vector3(w + 10, h + 10, 0))
end

local function resize(self, event, data)
	if event == window.WINDOW_EVENT_RESIZED then
		self.t = self.t or timer.delay(0.06, false, function()
			resize_bg()
			self.t = nil
		end)
	end
end

function init(self)
	math.randomseed(100000 * (socket.gettime() % 1))

	texts.initialize()
	monarch.scr = screens
	window.set_listener(resize)
	timer.delay(0.1, false, function()
		resize_bg()
	end)
	
	msg.post('.', 'init_msg')
end

function on_message(self, message_id, message, sender)
	if message_id == hash('init_msg') then
		monarch.show(monarch.scr.menu)
	end
end
